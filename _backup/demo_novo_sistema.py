"""
Demonstra√ß√£o do Novo Sistema de Analogias
Baseado exclusivamente no conte√∫do dos documentos fornecidos
"""

from new_analogies_system import StherAnalogiesSystem, add_analogy_if_confused

def main():
    print("üé¨" + "="*60)
    print("  DEMONSTRA√á√ÉO DO NOVO SISTEMA DE ANALOGIAS STHER")
    print("  Baseado em: Friends, Grey's Anatomy, Stranger Things,")
    print("  The Big Bang Theory, Young Sheldon e WandaVision")
    print("="*62)
    
    system = StherAnalogiesSystem()
    
    # Casos de teste que simulam intera√ß√µes reais
    test_scenarios = [
        {
            "name": "Estudante confuso com Determinantes",
            "user_msg": "Professor, n√£o entendi determinantes. Est√° muito complicado!",
            "prof_response": "O determinante √© calculado como ad - bc para uma matriz 2x2. √â fundamental para verificar se um sistema linear tem solu√ß√£o √∫nica."
        },
        {
            "name": "Dificuldade com Matrizes", 
            "user_msg": "Essas matrizes s√£o muito dif√≠ceis de entender, n√£o consigo",
            "prof_response": "Matrizes s√£o tabelas de n√∫meros organizados em linhas e colunas. Podemos somar, subtrair e multiplicar seguindo regras espec√≠ficas."
        },
        {
            "name": "Confus√£o com Probabilidade",
            "user_msg": "Probabilidade est√° muito confuso, pode me ajudar?",
            "prof_response": "Probabilidade mede a chance de um evento ocorrer, variando de 0 (imposs√≠vel) a 1 (certo). √â calculada como casos favor√°veis dividido por casos poss√≠veis."
        },
        {
            "name": "D√∫vida sobre Fun√ß√µes",
            "user_msg": "N√£o consigo entender fun√ß√µes, √© muito complicado",
            "prof_response": "Uma fun√ß√£o √© uma rela√ß√£o que associa cada elemento do dom√≠nio a exatamente um elemento do contradom√≠nio. Representamos como f(x) = y."
        },
        {
            "name": "Trigonometria Dif√≠cil",
            "user_msg": "Trigonometria √© muito complicado, preciso de ajuda",
            "prof_response": "Trigonometria estuda as rela√ß√µes entre √¢ngulos e lados dos tri√¢ngulos. As principais fun√ß√µes s√£o seno, cosseno e tangente."
        }
    ]
    
    for i, scenario in enumerate(test_scenarios, 1):
        print(f"\nüéØ CEN√ÅRIO {i}: {scenario['name']}")
        print("-" * 50)
        print(f"üë§ ESTUDANTE: {scenario['user_msg']}")
        print(f"üë®‚Äçüè´ PROFESSOR: {scenario['prof_response']}")
        
        # Aplica o sistema de analogias
        enhanced_response = add_analogy_if_confused(
            scenario['user_msg'], 
            scenario['prof_response']
        )
        
        # Verifica se analogia foi adicionada
        if enhanced_response != scenario['prof_response']:
            print("\nüé¨ SISTEMA DE ANALOGIAS ATIVADO!")
            print("‚îÄ" * 40)
            # Mostra apenas a parte da analogia
            analogy_part = enhanced_response.replace(scenario['prof_response'], "").strip()
            print(analogy_part)
        else:
            print("\nüí≠ Nenhuma confus√£o detectada ou t√≥pico n√£o reconhecido")
        
        print("\n" + "="*60)
    
    print("\nüéä DEMONSTRA√á√ÉO CONCLU√çDA!")
    print("\nO sistema agora:")
    print("‚úÖ Detecta confus√£o automaticamente")
    print("‚úÖ Identifica t√≥picos matem√°ticos") 
    print("‚úÖ Usa analogias das s√©ries fornecidas")
    print("‚úÖ Integra perfeitamente com Professor Carlos")
    print("\nüé¨ S√©ries dispon√≠veis: Friends, Grey's Anatomy, Stranger Things,")
    print("   The Big Bang Theory, Young Sheldon, WandaVision")

if __name__ == "__main__":
    main() 